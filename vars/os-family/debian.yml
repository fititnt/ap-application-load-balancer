---
# FILE:            {{ role_path }}/vars/os-family/debian.yml
# LICENSE:         Public Domain
#
# DESCRIPTION:     This file is loaded by default for at least these OSs:
#                  'Debian': ['Debian', 'Ubuntu', 'Raspbian', 'Neon', 'KDE neon',
#                            'Linux Mint', 'SteamOS', 'Devuan', 'Kali', 'Cumulus Linux'],

alb_internal_root_user: 'root'
alb_internal_root_group: 'root'
alb_internal_package_manager_group: "apt"

alb_internal_bootstrap_basic_tools:
  - name: aptitude
    state: present
  - name: sudo
    state: present
  - name: software-properties-common
    state: present
  - name: rsync
    state: present
  - name: net-tools
    state: present

alb_internal_bootstrap_extra_tools:
  - name: python3-pip
    state: present
  - name: python3-setuptools
    state: present
  - name: python3-apt
    state: present
  - name: python3-passlib
    state: present
  - name: apache2-utils
    state: present
  - name: nmap
    state: present
  - name: gcc
    state: present
  - name: make
    state: present

alb_internal_bootstrap_luarocks_packages:
  - name: lua5.1
    state: present
  - name: luarocks
    state: present

## ALB/HAProxy _________________________________________________________________
alb_internal_haproxy_conf: "/etc/haproxy/haproxy.cfg"
alb_internal_haproxy_management: "systemd"
alb_internal_haproxy_system_user: "{{ alb_haproxy_system_user | default('haproxy') }}"
alb_internal_haproxy_system_group: "{{ alb_haproxy_system_group | default('haproxy') }}"

# @see https://haproxy.debian.net/
alb_internal_haproxy_package:
  name: 'haproxy=2.0.\*'
  state: present

# TASK [ap-application-load-balancer : haproxy | install.yml: generic method] ***********************************************************************************************************************************************************
# fatal: [ap_echo_debian10]: FAILED! => {"cache_update_time": 1575982429, "cache_updated": false, "changed": false, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"      install 'haproxy=2.0.\\*'' failed: E: Version '2.0.\\*' for 'haproxy' was not found\n", "rc": 100, "stderr": "E: Version '2.0.\\*' for 'haproxy' was not found\n", "stderr_lines": ["E: Version '2.0.\\*' for 'haproxy' was not found"], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information..."]}
# [ap_echo_debian10] TASK: ap-application-load-balancer : haproxy | install.yml: generic method (debug)> c
# fatal: [ap_delta_ubuntu18]: FAILED! => {"cache_update_time": 1575982617, "cache_updated": false, "changed": false, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"      install 'haproxy=2.0.\\*'' failed: E: Version '2.0.\\*' for 'haproxy' was not found\n", "rc": 100, "stderr": "E: Version '2.0.\\*' for 'haproxy' was not found\n", "stderr_lines": ["E: Version '2.0.\\*' for 'haproxy' was not found"], "stdout": "Reading package lists...\nBuilding dependency tree...\nReading state information...\n", "stdout_lines": ["Reading package lists...", "Building dependency tree...", "Reading state information..."]}
# [ap_delta_ubuntu18] TASK: ap-application-load-balancer : haproxy | install.yml: generic method (debug)> c

alb_internal_haproxy_apt_repository:
  repo: ppa:vbernat/haproxy-2.0
  state: present

## ALB/OpenResty _______________________________________________________________
# @see https://openresty.org/en/linux-packages.html
alb_internal_openresty_packages:
  - name: "openresty"
    state: present
  - name: "openresty-opm"
    state: present

alb_internal_openresty_apt_key:
  url: "https://openresty.org/package/pubkey.gpg"
  state: present

alb_internal_openresty_apt_repository:
  repo: "deb http://openresty.org/package/debian $(lsb_release -sc) main"
  state: "present"
  filename: "openresty"

## ALB/Bootstrap/AnsibleContolNode: is NOT installed by default ________________
# requires: `alb_bootstrap_ansible_control_node: yes` explicit
alb_internal_bootstrap_ansible_control_node_apt_key:
  keyserver: "keyserver.ubuntu.com"
  id: "93C4A3FD7BB9C367"

alb_internal_bootstrap_ansible_control_node_apt_repository:
  - repo: "deb http://ppa.launchpad.net/ansible/ansible/ubuntu bionic main"
    state: present

alb_internal_bootstrap_ansible_control_node_packages:
  - name: ansible
    state: latest

## ALB/Status __________________________________________________________________
alb_internal_status_localports: "netstat -ntulp"
alb_internal_status_diskspace: "df -h"

alb_internal_status_syntax_haproxy: "/usr/sbin/haproxy -c -V -f /etc/haproxy/haproxy.cfg"
alb_internal_status_syntax_openresty: "openresty -t"

alb_internal_status_availablepackages_haproxy: "apt search haproxy"
alb_internal_status_availablepackages_openresty: "apt search openresty"
alb_internal_status_availablepackages_python: "apt search python"
alb_internal_status_availablepackages_lua: "apt search lua*"
alb_internal_status_availablepackages_luarocks: "apt search luarocks"

alb_internal_status_installedpackages_haproxy: "apt-cache policy haproxy"
alb_internal_status_installedpackages_openresty: "apt-cache policy openresty"
alb_internal_status_installedpackages_python: "apt-cache policy python"
alb_internal_status_installedpackages_lua: "apt-cache policy lua"
alb_internal_status_installedpackages_luarocks: "apt-cache policy luarocks"

# https://docs.ansible.com/ansible/latest/modules/hostname_module.html
alb_internal_bootstrap_alb_standard_hostname_use: 'debian'