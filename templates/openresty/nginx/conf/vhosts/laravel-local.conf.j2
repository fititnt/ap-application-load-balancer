# {{ ansible_managed }}
#
server {
    listen 443 ssl;
    server_name  {{ item.server_name|default(item.domain) }};
    root {{ item.path }};

    ## Automatic HTTPS / 443 port (DO NOT REMOVE) - Start
    # Fallback certificate
    ssl_certificate /etc/ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /etc/ssl/resty-auto-ssl-fallback.key;

    # Real certificate
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }

    #  Let's Encrypt acme-challenge
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }
    ## Automatic HTTPS / 443 port (DO NOT REMOVE) - Start

    # {{ item.auth_basic|default("sem auth_basic") }}
    # {{ item.auth_basic_user_file|default("sem auth_basic_user_file") }}

{% if item.auth_basic_user_file is defined and item.auth_basic_user_file|length %}
    auth_basic           "{{ item.auth_basic|default('Restricted Area') }}";
    auth_basic_user_file {{ item.auth_basic_user_file }};
{% endif %}

    access_log  {{ application_load_balancer_logs_path }}/access-{{ item.server_name|default(item.domain) }}.log  main;
    error_log  {{ application_load_balancer_logs_path }}/error-{{ item.server_name|default(item.domain) }}.log;

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    index index.html index.htm index.php;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    error_page 404 /index.php;

{% if item.fastcgi_pass is defined and item.fastcgi_pass|length %}
    location ~ \.php$ {
        fastcgi_pass  {{ item.fastcgi_pass }};
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }
{% else %}
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }
{% endif %}

    location ~ /\.(?!well-known).* {
        auth_basic          off;
        deny all;
    }
}

server {
    listen 80;

    server_name {{ item.server_name|default(item.domain) }};
    # return 301 https://{{ item.server_name|default(item.domain) }}$request_uri;

    # TODO: testar configuração a seguir aqui, e permitir que ele faça o resto

    # NOTA: curl -I http://site.com/.well-known/acme-challenge/aaaa
    #       rem redirecionado para httpS em vez de exibir o acme challange


    ## Automatic HTTPS / :80 port (DO NOT REMOVE) - Start
    #  Let's Encrypt acme-challenge
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }
    ## Automatic HTTPS / :80 port (DO NOT REMOVE) - Start
}
