# {{ ansible_managed }}
# FILE:             /opt/alb/{{ type_of_app }}s/{{ item.app_uid }}.conf
# ALB-STRATEGY:     {% block app_alb_strategy_name %}_base{% endblock %}

# HTTPS block
server {
    listen {{ alb_openresty_ip }}:{{ alb_openresty_httpsport }} ssl;
    server_name {{ item.app_domain }}{% if ((item.app_domain_extras is defined and item.app_domain_extras) and (item.app_domain_extras | length > 0)) %} {{ item.app_domain_extras | join (' ') }}{% endif %};

    # TODO: implement configurable error log,
    #       @see https://docs.nginx.com/nginx/admin-guide/monitoring/logging/
    #       (fititnt, 2019-12-05:02:56 BRT)
    error_log  /var/log/{{ type_of_app }}/{{ item.app_uid }}/error.log;
    access_log  /var/log/{{ type_of_app }}/{{ item.app_uid }}/access.log  main;

    {% if (item.app_root is defined and item.app_root) %}root "{{ item.app_root }}";{% endif %}

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    {{ alb_apprule_automatichttps_httpsblock | indent(4) }}

    {# @TODO on future, look for alternatives to be able make flexible where the partials, so users could replace specific partials, and we could move it to role_path/templates/alb/partials and not role_path/templates/alb/strategies/partials (fititnt, 2019-12-05 20:20 BRT) #}
    {% filter indent(width=4) %}{% include "partials/add_headers.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/basic_auth.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/ping_pong.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/alb_health_check.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/health_check.conf.j2" %}{% endfilter %}

    {% block app_raw_https %}# No app_raw_https{% endblock %}

}

# HTTP block
server {
    listen {{ alb_openresty_ip}}:{{ alb_openresty_httpport }};
    server_name {{ item.app_domain }}{% if ((item.app_domain_extras is defined and item.app_domain_extras) and (item.app_domain_extras | length > 0)) %} {{ item.app_domain_extras | join (' ') }}{% endif %};

    error_log  /var/log/{{ type_of_app }}/{{ item.app_uid }}/error.log;
    access_log  /var/log/{{ type_of_app }}/{{ item.app_uid }}/access.log  main;

    {% if (item.app_root is defined and item.app_root) %}root "{{ item.app_root }}";{% endif %}

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    {# @TODO on future, look for alternatives to be able make flexible where the partials, so users could replace specific partials, and we could move it to role_path/templates/alb/partials and not role_path/templates/alb/strategies/partials (fititnt, 2019-12-05 20:20 BRT) #}
    {% filter indent(width=4) %}{% include "partials/add_headers.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/basic_auth.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/ping_pong.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/alb_health_check.conf.j2" %}{% endfilter %}
    {% filter indent(width=4) %}{% include "partials/health_check.conf.j2" %}{% endfilter %}

{% if (item.app_forcehttps is defined and item.app_forcehttps is sameas true) or (item.app_forcehttps is undefined and alb_default_app_forcehttps is sameas true) %}
    ## item.app_forcehttps: true
    ## redirect 301 except for Let's Encrypt HTTPS check.
    location / {
        return 301 https://{{ item.app_domain }}$request_uri;
    }
{% else %}
#### HTTPS redirect not enforced, allow HTTP block serve content - START

    {% block app_raw_http %}# No app_raw_http{% endblock %}

#### HTTPS redirect not enforced, allow HTTP block serve content - END
{% endif %}

    # TODO: testar configuração a seguir aqui, e permitir que ele faça o resto

    # NOTA: curl -I http://site.com/.well-known/acme-challenge/aaaa
    #       rem redirecionado para httpS em vez de exibir o acme challange


    {{ alb_apprule_automatichttp_httpsblock | indent(4) }}
}