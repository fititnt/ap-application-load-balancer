---

# FILE:            {{ role_path }}/tasks/main.yml
# LICENSE:         Public Domain

## AP-ALB v0.8.x adaptations to support RHEL/CentOS 8 family and design changes to allow flexibility even for non-tested OSs #34
##   - https://github.com/fititnt/ap-application-load-balancer/issues/34
##   - https://linuxize.com/post/how-to-install-python-on-centos-8/
##   - https://www.linuxschoolonline.com/how-to-use-ansible-even-it-the-target-host-does-not-have-python-installed/
##   - https://medium.com/@somakdas/simple-ansible-paybook-without-python-installed-in-target-machines-1df423004da5
##   - https://ansible-tips-and-tricks.readthedocs.io/en/latest/ansible/commands/#when-all-else-fails

# About tags https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html

# ansible -m raw -s -a "sudo dnf install python3 -y" aguia-pescadora-delta.etica.ai

# OpenResty https://openresty.org/en/linux-packages.html

- name: "ALB Info"
  debug: 
    msg:
      alb_version: "{{ alb_version }}"
      node:
        os: "{{ ansible_os_family | default('undefined') | lower }}"
        dist: "{{ ansible_distribution | default('undefined') | lower }}"
        dist_major_ver: "{{ ansible_distribution_major_version | default('undefined') | lower }}"
  tags:
    - alb
    - always

- name: "ALB | Load variables based on host system"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
    - "{{ ansible_distribution | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
    - "{{ (ansible_os_family is defined) | ternary('untested_os_family','unknown') }}.yml"
  tags:
    - alb
    - always

- name: "ALB | Alert"
  fail:
    msg: "{{ alb_internal_alert_all }}"
  tags:
    - always
  when:
    - alb_internal_alert_all is defined

# - name: "ALB Info"
#   debug: 
#     msg:
#       __alb_varsfile: "{{ __alb_varsfile | default('error(?)') }}"
#   tags:
#     #- never
#     - debug

- fail:
    msg: "testing"

# - name: "ALB Info"
#   debug: 
#     msg:
#       alb_version: "{{ alb_version }}"
#       ansible_os_family: "{{ ansible_os_family | default('undefined') }}"
#       ansible_distribution: "{{ ansible_distribution | default('none') }}"
#       ansible_distribution_major_version: "{{ ansible_distribution_major_version | default('none') }}"
#   tags:
#     - never
#     - debug
#     - alb-debug

# - name: "ALB | Load variables based on host system (debug)"
#   debug:
#     msg: 
#      #- ansible_os_family: "{{ ansible_os_family | default('none') }}"
#      - ansible_distribution: "{{ ansible_distribution | default('none') }}"
#      #- ansible_distribution_version: "{{ ansible_distribution_version | default('none') }}"
#      #- ansible_distribution_major_version: "{{ ansible_distribution_major_version | default('none') }}"
#      - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
#      - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
#      - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
#      - "{{ ansible_distribution | lower }}.yml"
#      - "{{ ansible_os_family | lower }}.yml"


- name: "ALB | Load variables based on host system | print"
  debug:
    msg: "{{ alb_internal_loadevarsfile }}"
  tags:
    - alb
    - alb-bootstrap
  when:
    - alb_internal_loadevarsfile is defined

#- name: "alb_trusted_hosts"
#  debug: 
#    msg: "{{ alb_trusted_hosts }}"

#- name: "alb_trusted_hosts_ips"
#  debug: 
#    msg: "{{ alb_trusted_hosts_ips }}"

- name: "bootstrap/main.yml"
  include: bootstrap/main.yml
  tags:
    - alb
    - alb-bootstrap
  when:
    - alb_manange_all is sameas true
    - alb_manange_bootstrap is sameas true

- name: check the version of last run on /etc/ansible/facts.d/alb_lastrun.fact
  set_fact:
    alb_version_lastrun: "{{ ansible_facts['ansible_local']['alb_lastrun']['alb_version'] }}"
  when: ansible_facts['ansible_local'] is defined and ansible_facts['ansible_local']['alb_lastrun'] is defined and ansible_facts['ansible_local']['alb_lastrun']['alb_version'] is defined

- name: "sanitycheck/main.yml"
  include: sanitycheck/main.yml
  tags:
    - alb
    - alb-sanitycheck
  when:
    - alb_manange_all is sameas true
    - alb_manange_sanitycheck is sameas true

- name: "common/common.yml"
  include: common/common.yml
  tags:
    - alb
    - alb-common
  when:
    - alb_manange_all is sameas true
    - alb_manange_common is sameas true

# TODO: implement a way to no implement apps and only sysapps based on what is
#       is enabled at the moment inside the alb-init.yml. This actually is
#       possible, but will need testing
#       (fititnt, 2019-12-02 14:39 BRT)
- name: alb-init.yml
  include: alb-init.yml
  tags:
    - alb
    - alb-init
  when:
    - alb_manange_all is sameas true
    - (alb_manange_apps is sameas true) or (alb_manange_sysapps is sameas true)

- name: OpenResty
  include: openresty/main.yml
  tags:
    - alb
    - alb-openresty
  when:
    - alb_manange_all is sameas true
    - alb_manange_openresty is sameas true

# - name: Instalação de OpenResty, Lua Rest & Lua Resty AutoSSL (faz o HTTPS para os Apps)
#   include: openresty/openresty-luarocks-lua-resty-auto-ssl-install.yml
#   tags:
#     - alb
#     - alb-openresty
#   when:
#     - alb_manange_all is sameas true
#     - alb_manange_openresty is sameas true

# - name: openresty/alb-openresty-after.yml
#   include: openresty/alb-openresty-after.yml
#   tags:
#     - alb
#     - alb-openresty
#   when:
#     - alb_manange_all is sameas true
#     - alb_manange_openresty is sameas true

- name: HAproxy
  include: haproxy/haproxy.yml
  tags:
    - alb
    - alb-haproxy
  when:
    - alb_manange_all is sameas true
    - alb_manange_haproxy is sameas true
    # - alb_forceignore_haproxy is defined and alb_forceignore_haproxy is sameas true

- name: ALB rule for each Sysapp
  include: sysapps/sysapps.yml
  tags:
    - alb
    - alb-sysapps
  when:
    - alb_manange_all is sameas true
    - alb_manange_sysapps is sameas true

- name: ALB rule for each App
  include: apps/apps.yml
  tags:
    - alb
    - alb-apps
  when:
    - alb_manange_all is sameas true
    - alb_manange_apps is sameas true

- name: logrotate/logrotate.yml
  include: logrotate/logrotate.yml
  tags:
    - alb
    - alb-logrotate
  when:
    - alb_manange_all is sameas true
    - alb_manange_logrotate is sameas true

# ansible-playbook -i hosts myplaybook.yml --tags "alb-ufw"
- name: ufw/main.yml
  include: ufw/main.yml
  tags:
    - alb
    - alb-ufw
    - alb-firewall
  # when: alb_forceignore_ufw is defined and alb_forceignore_haproxy != true
  when:
    - alb_manange_all is sameas true
    - alb_manange_ufw is sameas true

- name: alb-final.yml
  include: alb-final.yml
  tags:
    - alb
    - alb-final
  when:
    - alb_manange_all is sameas true