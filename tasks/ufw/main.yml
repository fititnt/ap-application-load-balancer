---
# tasks/ufw/main.yml

- name: ufw | check-if-need-update.yml
  include: check-if-need-update.yml

## ufw status verbose  (before) ________________________________________________
- name: "ufw | ufw status verbose (before)"
  shell: "ufw status verbose"
  become: "yes"
  changed_when: false
  register: ufw_status_verbose1

- name: "ufw | ufw status verbose print (before)"
  debug: var=ufw_status_verbose1.stdout_lines

- name: ufw | install-ufw.yml
  include: install-ufw.yml

- name: ufw | ufw-reset.yml
  include: ufw-reset.yml
  when: 
    - "alb_ufw_canreset is defined and alb_ufw_canreset is sameas true"
    - "alb_ufw_reset is defined and alb_ufw_canreset is sameas true"

- name: "ufw | Rules alb_ufw_rules_always"
  include: rules.yml
  vars:
    ufw_rules: "{{ alb_ufw_rules_always }}"
    ufw_commentprefix: "{{ alb_ufw_commentprefix }}"
    name_of_rules: "alb_ufw_rules_always"
  when: "alb_ufw_rules_always is defined"

- name: "ufw | Rules alb_ufw_rules"
  include: rules.yml
  vars:
    ufw_rules: "{{ alb_ufw_rules }}"
    ufw_commentprefix: "{{ alb_ufw_commentprefix }}"
    name_of_rules: "alb_ufw_rules"
  when: "alb_ufw_rules is defined"

- name: ufw | allow-dmz.yml
  include: allow-dmz.yml

- name: ufw | allow-bastion-hosts.yml
  include: allow-bastion-hosts.yml

- name: ufw | allow-jump-boxes.yml
  include: allow-jump-boxes.yml

- name: ufw | default-policies.yml
  include: default-policies.yml

## @see https://github.com/ansible/ansible/issues/45446

- name: ufw | Configure the kernel to keep connections alive when enabling the firewall
  sysctl:
    name: net.netfilter.nf_conntrack_tcp_be_liberal
    value: '1'
    state: present
    sysctl_set: yes
    reload: yes

# TASK [ap-application-load-balancer : Configure the kernel to keep connections alive when enabling the firewall] ********************
#  [WARNING]: The value 1 (type int) in a string field was converted to '1' (type string). If this does not look like what you
# expect, quote the entire value to ensure it does not change.
# 
# fatal: [apps_server_apalbdemo]: FAILED! => {"changed": false, "msg": "Failed to reload sysctl: kernel.panic = 10\nnet.ipv6.conf.all.disable_ipv6 = 1\nsysctl: cannot stat /proc/sys/net/netfilter/nf_conntrack_tcp_be_liberal: No such file or directory\n"}

#- name: "UFW state {{ alb_ufw_state | default (alb_ufw_state__default) }}"
#  ufw:
#    state: "{{ alb_ufw_state | default (alb_ufw_state__default) }}"

- name: "ufw | UFW state enabled"
  ufw:
    state: "enabled"

## ufw status verbose  (after) ________________________________________________
- name: "ufw | ufw status verbose (after)"
  shell: "ufw status verbose"
  become: "yes"
  changed_when: false
  register: ufw_status_verbose2

- name: "ufw | ufw status verbose print (after)"
  debug: var=ufw_status_verbose2.stdout_lines
