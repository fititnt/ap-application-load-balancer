---

# FILE:            {{ role_path }}/tasks/alb-init.yml
# LICENSE:         Public Domain

# Note: both /opt/alb/apps/ and /opt/alb/sysapps/ need +x permissions on full
#       path because of .htaccess. Same should happen with default HTML content
#       Use this to see full tree permissions
#            namei -m /opt/alb/sysapps/.htaccess

- name: alb-init | mkdir -p /etc/ansible/facts.d/
  file:
    path: /etc/ansible/facts.d/
    state: directory
    #owner: root
    #group: root
    #mode: 0755
    #recurse: true
  when:
    - alb_version_lastrun != alb_version

# Example group command from Ansible Playbooks
- name: alb-init | Create group alb if already does not exist
  group:
    name: alb
    state: present
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | Create system user alb
  user:
    name: alb
    comment: "System user for ALB (Application Load Balancer)"
    system: yes
    create_home: no
    shell: /usr/sbin/nologin
    group: alb
    groups: "{{ alb_nginx_user }}"
    # groups: www-data
  when:
    - alb_version_lastrun != alb_version
# TODO: check on new installations www-data user already exist and this command would not fail (fititnt, 2019-11-07 21:11 BRT)

## Let's create all directories that would not be created by OpenResty or HAproxy
- name: "alb-init | mkdir /opt/alb/ | Base directory for ALB, with symlinks for other important places"
  file:
    path: /opt/alb/
    state: directory
    mode: '0611'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | mkdir /var/opt/alb/ | Base path for variable data on run time (temporary, cache, backups...)"
  file:
    # path: /var/alb/
    path: /var/opt/alb/
    state: directory
    mode: '0611'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | mkdir /var/opt/alb/alb-cache/"
  file:
    path: /var/opt/alb/alb-cache/
    state: directory
    mode: '0700'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | mkdir /var/opt/alb/alb-tmp/"
  file:
    path: /var/opt/alb/alb-tmp/
    state: directory
    mode: '0700'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | mkdir /var/opt/alb/alb-backups/"
  file:
    # path: /var/alb-backups/
    path: /var/opt/alb/alb-backups/
    state: directory
    mode: '0700'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | mkdir /var/opt/alb/apps-backups/"
  file:
    path: /var/opt/alb/apps-backups/
    state: directory
    mode: '0700'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | mkdir /var/opt/alb/sysapps-backups/"
  file:
    path: /var/opt/alb/sysapps-backups/
    state: directory
    mode: '0700'
    owner: root
    group: root
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /var/log/alb/
  file:
    path: /var/log/alb/
    state: directory
    mode: '0644'
    owner: root
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | touch /var/log/alb/access.log
  file:
    path: /var/log/alb/access.log
    state: touch
    mode: '0644'
    owner: "{{ alb_nginx_user }}"
    group: "{{ alb_nginx_user }}"
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | touch /var/log/alb/error.log
  file:
    path: /var/log/alb/error.log
    state: touch
    mode: '0644'
    owner: "{{ alb_nginx_user }}"
    group: "{{ alb_nginx_user }}"
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | touch /var/log/alb/letsencrypt.log
  file:
    path: /var/log/alb/letsencrypt.log
    state: touch
    mode: '0644'
    owner: "{{ alb_nginx_user }}"
    group: "{{ alb_nginx_user }}"
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /opt/alb/apps/
  file:
    path: /opt/alb/apps/
    state: directory
    mode: '0655'
    owner: root
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /opt/alb/sysapps/
  file:
    path: /opt/alb/sysapps/
    state: directory
    mode: '0655'
    owner: root
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /opt/alb/info/
  file:
    path: /opt/alb/info/
    state: directory
    mode: '0655'
    owner: root
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /opt/alb/bin/
  file:
    path: /opt/alb/bin/
    state: directory
    mode: '0655'
    owner: root
  when:
    - alb_version_lastrun != alb_version

#- name: alb-init | mkdir /var/app/
#  file:
#    path: /var/app/
#    state: directory
#    mode: '0655'
#    owner: root
#  when:
#    - alb_version_lastrun != alb_version

#- name: alb-init | mkdir /var/sysapp/
#  file:
#    path: /var/sysapp/
#    state: directory
#    mode: '0644'
#    owner: root
#  when:
#    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /var/log/app
  file:
    path: /var/log/app
    state: directory
    mode: '0644'
    owner: root
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | mkdir /var/log/sysapp
  file:
    path: /var/log/sysapp
    state: directory
    mode: '0644'
    owner: root
  when:
    - alb_version_lastrun != alb_version

# Syntactic sugar symbolic links
#- name: alb-init | ln -s /var/alb/ /opt/alb/alb-data
#  file:
#    src: /var/alb/
#    dest: /opt/alb/alb-data
#    owner: root
#    state: link
#    # force: yes
#  when:
#    - alb_version_lastrun != alb_version

- name: "alb-init | ln -s /var/opt/alb/alb-cache/ /opt/alb/alb-cache"
  file:
    src: /var/opt/alb/alb-cache/
    dest: /opt/alb/alb-cache
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | ln -s /var/opt/alb/alb-backups/ /opt/alb/alb-backups"
  file:
    src: /var/opt/alb/alb-backups/
    dest: /opt/alb/alb-backups
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | ln -s /var/opt/alb/alb-tmp/ /opt/alb/alb-tmp"
  file:
    src: /var/opt/alb/alb-tmp/
    dest: /opt/alb/alb-tmp
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | ln -s /var/opt/alb/apps-backups/ /opt/alb/apps-backups"
  file:
    src: /var/opt/alb/apps-backups/
    dest: /opt/alb/apps-backups
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | ln -s /var/opt/alb/sysapps-backups/ /opt/alb/sysapps-backups"
  file:
    src: /var/opt/alb/sysapps-backups/
    dest: /opt/alb/apps-backups
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /var/log/alb/ /opt/alb/alb-logs
  file:
    src: /var/log/alb/
    dest: /opt/alb/alb-logs
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

#- name: alb-init | ln -s /var/app/ /opt/alb/apps-data
#  file:
#    src: /var/app/
#    dest: /opt/alb/apps-data
#    owner: root
#    state: link
#    # force: yes
#  when:
#    - alb_version_lastrun != alb_version

#- name: alb-init | ln -s /var/sysapp/ /opt/alb/sysapps-data
#  file:
#    src: /var/sysapp/
#    dest: /opt/alb/sysapps-data
#    owner: root
#    state: link
#    # force: yes
#  when:
#    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /var/log/app/ /var/log/alb/apps
  file:
    src: /var/log/app/
    dest: /var/log/alb/apps
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /var/log/sysapp/ /var/log/alb/sysapps
  file:
    src: /var/log/sysapp/
    dest: /var/log/alb/sysapps
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /var/log/app/ /opt/alb/apps-logs
  file:
    src: /var/log/app/
    dest: /opt/alb/apps-logs
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /var/log/sysapp/ /opt/alb/sysapps-logs
  file:
    src: /var/log/sysapp/
    dest: /opt/alb/sysapps-logs
    owner: root
    state: link
    # force: yes
  when:
    - alb_version_lastrun != alb_version

# The next links have force: yes because are likely to not exist on first installation
- name: alb-init | ln -s /etc/haproxy/ /opt/alb/haproxy
  file:
    src: /etc/haproxy/
    dest: /opt/alb/haproxy
    owner: root
    state: link
    force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /usr/local/openresty/nginx/ /opt/alb/nginx
  file:
    src: /usr/local/openresty/nginx/
    dest: /opt/alb/nginx
    owner: root
    state: link
    force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /etc/resty-auto-ssl/letsencrypt/ /opt/alb/letsencrypt
  file:
    src: /etc/resty-auto-ssl/letsencrypt/
    dest: /opt/alb/letsencrypt
    owner: root
    state: link
    force: yes
  when:
    - alb_version_lastrun != alb_version

# alb.conf is a syntax sugar to real nginx.conf
- name: alb-init | ln -s /usr/local/openresty/nginx/conf/nginx.conf /opt/alb/alb.conf
  file:
    src: /usr/local/openresty/nginx/conf/nginx.conf
    dest: /opt/alb/alb.conf
    owner: root
    state: link
    force: yes
  when:
    - alb_version_lastrun != alb_version

- name: alb-init | ln -s /etc/haproxy/haproxy.cfg /opt/alb/nlb.cfg
  file:
    src: /etc/haproxy/haproxy.cfg
    dest: /opt/alb/nlb.cfg
    owner: root
    state: link
    force: yes
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | install python3-pip"
  package:
    name: "python3-pip"
    state: present
  when:
    - alb_version_lastrun != alb_version

- name: "alb-init | pip3 install passlib"
  pip:
    name: passlib
  when:
    - alb_version_lastrun != alb_version
