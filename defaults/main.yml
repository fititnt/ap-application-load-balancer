---
# FILE: {{ role_path }}/defaults/main.yml

application_load_balancer_name: "AP Application Load Balancer"
application_load_balancer_hide_alb: yes
application_load_balancer_forcedebug: no

application_load_balancer_apps: []

# application_load_balancer_apps_: []

application_load_balancer_apps_serverblock_template: '{{ role_path }}/templates/openresty/nginx/conf/vhosts/static-site.conf.j2'

# Note: at this moment, only "file" implemented. But later "syslog" could be one option
application_load_balancer_logs_method: "file"

# TODO: considerar implementar logrotate (fititnt, 2019-07-28 23:00 BRT)
application_load_balancer_logs_path: "/var/log/application_load_balancer"

### NGinx (OpenResty) __________________________________________________________
application_load_balancer_nginxconf_template: "{{ role_path }}/templates/openresty/nginx/conf/nginx.conf.j2"

# If you use "{{ role_path }}/templates/openresty/nginx/conf/nginx.conf.j2"
# and not a very customized nginx.conf, you can customize with these variables

application_load_balancer_nginx_user: "www-data"

# See {{ role_path }}/templates/openresty/nginx/conf/nginx.conf.j2
application_load_balancer_nginx_maincontext_custom: |
  # FILE: /usr/local/openresty/nginx/conf/nginx.conf
  # NGINX CONTEXT: main (global)
  # Change-me with variable application_load_balancer_nginx

application_load_balancer_nginx_eventscontext_custom: |
  # FILE: /usr/local/openresty/nginx/conf/nginx.conf
  # NGINX CONTEXT: events
  # Change-me with variable application_load_balancer_nginx_eventscontext_custom

application_load_balancer_nginx_httpcontext_custom: |
  # FILE: /usr/local/openresty/nginx/conf/nginx.conf
  # NGINX CONTEXT: events
  # Change-me with variable application_load_balancer_nginx_eventscontext_custom
  

### vnStat _____________________________________________________________________
# @see https://humdi.net/vnstat/
# @see https://www.howtoforge.com/tutorial/vnstat-network-monitoring-ubuntu/



### Application Load Balancer - Internal Use ___________________________________
# If you are creating custom ALB Rules (e.g. OpenResty Server Blocks) you will
# need to consider these rules


application_load_balancer_apprule_automatichttps_httpsblock: |
  ## Automatic HTTPS / 443 port (DO NOT REMOVE) - Start
  # Fallback certificate
  ssl_certificate /etc/ssl/resty-auto-ssl-fallback.crt;
  ssl_certificate_key /etc/ssl/resty-auto-ssl-fallback.key;

  # Real certificate
  ssl_certificate_by_lua_block {
    auto_ssl:ssl_certificate()
  }

  #  Let's Encrypt acme-challenge
  location /.well-known/acme-challenge/ {
    content_by_lua_block {
      auto_ssl:challenge_server()
    }
  }
  ## Automatic HTTPS / 443 port (DO NOT REMOVE) - Start

application_load_balancer_apprule_automatichttp_httpsblock: |
  ## Automatic HTTPS / :80 port (DO NOT REMOVE) - Start
  #  Let's Encrypt acme-challenge
  location /.well-known/acme-challenge/ {
    content_by_lua_block {
      auto_ssl:challenge_server()
    }
  }
  ## Automatic HTTPS / :80 port (DO NOT REMOVE) - Start

## Internal use / Placeholder tags _____________________________________________
application_load_balancer_openresty_httpport: 8080
application_load_balancer_openresty_httpsport: 4443
application_load_balancer_haproxy_haproxy_template: "{{ role_path }}/files/haproxy-minimal.cfg.j2"

#
application_load_balancer_forceignore_haproxy: false
application_load_balancer_forceignore_openresty: false
application_load_balancer_forceignore_ufw: false
